{
  "swagger": "2.0",
  "info": {
    "title": "WebAPIApplication, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null",
    "version": "1.0"
  },
  "paths": {
    "/api/CustomerPolicies": {
      "get": {
        "tags": [
          "CustomerPolicies"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerPolicy"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CustomerPolicies"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CustomerPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CustomerPolicy"
            }
          }
        }
      }
    },
    "/api/CustomerPolicies/{id}": {
      "get": {
        "tags": [
          "CustomerPolicies"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CustomerPolicy"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomerPolicies"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CustomerPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "CustomerPolicies"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WeatherForecast"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CustomerPolicy": {
      "type": "object",
      "properties": {
        "cId": {
          "format": "int32",
          "type": "integer"
        },
        "pId": {
          "format": "int32",
          "type": "integer"
        },
        "cName": {
          "type": "string"
        },
        "insuranceAmt": {
          "format": "double",
          "type": "number"
        },
        "insuranceStatus": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "WeatherForecast": {
      "type": "object",
      "properties": {
        "date": {
          "format": "date",
          "type": "string"
        },
        "temperatureC": {
          "format": "int32",
          "type": "integer"
        },
        "temperatureF": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "summary": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}