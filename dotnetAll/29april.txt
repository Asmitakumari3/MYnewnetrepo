
448407570829735
f6bea4c918c6d1fdc0d80bce9ac9d59e

create database empDB_DataAnnotation

use empDB_DataAnnotation

create table empInfo
(
	empNo int primary key,
	empName varchar(20) not null,
	empDesigantion varchar(20) not null,
	empSalary int not null,
	empIsPermenant bit not null,
	empEmail varchar(50) not null,

	constraint chk_nameLength check (len(empName) between 3 and 20),
	constraint chk_salary check (empSalary between 8000 and 25000)
)
insert into empInfo values(101,'Nikhil','Trainer',9000,1,'nik@hotmail.com')
insert into empInfo values(102,'Aarti','Sales',9000,1,'aarti@hotmail.com')
insert into empInfo values(103,'Zoya','Trainer',19000,1,'zoya@hotmail.com')
insert into empInfo values(104,'Fahad','Accounts',13000,1,'fahad@hotmail.com')
insert into empInfo values(105,'Manish','Trainer',9000,1,'manish@hotmail.com')


---------------------------------------------------------------------------------------------------------------------






LINQ - SP



1. create a new database insuranceDB_SP_LINQ
	2. create a table - policyDetails
		PolicyNo int pk
		policyName varchar (google some name from intert and get some names of the policies)
			5 records
		policyPremieum (this between 5000 and 50000)
	3. create SP
		a. get all the policies
		b. get policy by policyno
		c. get policy by name
		d. get policy between range (eg. 8000 and 12000)
		e. add a new policy
		f. edit policy premieum by passing the name
		g. delete policy by no
	4. create a new console app LINQ_SP
	5. enable entity framework
	6. download poco classes

---------------------------------------------------------------------------------------






	insert into employeeInfo values(1,'Nikhil','Consultant',2000,1)
	insert into employeeInfo values(2,'Riya','HR',12000,1)
	insert into employeeInfo values(3,'Jiya','Consultant',22000,0)
	insert into employeeInfo values(4,'Amin','Sales',90000,1)
	insert into employeeInfo values(5,'Surbhi','Consultant',120000,1)
  
  
  Microsoft.EntityFrameworkCore.Tools
  Microsoft.EntityFrameworkCore.Design
  Microsoft.EntityFrameworkCore.SqlServer
  Microsoft.EntityFrameworkCore
  
  
  86B46DA2A2A958B
  EmployeeInfoDB_EF
  
  
  ScaffoldDB-Context "Server=86B46DA2A2A958B;database=EmployeeInfoDB_EF;integrated security=true;TrustServerCertificate=True" -Provider Microsoft.EntityFrameworkCore.SqlServer
	-outPutDir -DB
  
  -outputdir - refers to where should POCO classes get created
  
  
  -----------------------------------------------------------------------------------------------------------
  
  1. Create a new database - EmployeeInfoDB_EF
2. Create a new table EmployeeInfo
	create table employeeInfo
	(
		empNo int primary key,
		empName varchar(20),
		empDesignation varchar(20),
		empSalary int,
		empIsPermenant bit
	)

	insert into employeeInfo values(1,'Nikhil','Consultant',2000,1)
	insert into employeeInfo values(2,'Riya','HR',12000,1)
	insert into employeeInfo values(3,'Jiya','Consultant',22000,0)
	insert into employeeInfo values(4,'Amin','Sales',90000,1)
	insert into employeeInfo values(5,'Surbhi','Consultant',120000,1)

3. Create a new .net core application - console app - empAPP_EF
4. Application has no idea about EntityFramework, thus we will have to add Nuget packages
	Solution explorer -> right click project name -> Manage Nuget package
	in the browse section, in search box, enter entityframework
	(Make sure to choose the right version as per your application, else error)
  Microsoft.EntityFrameworkCore.Tools
  Microsoft.EntityFrameworkCore.Design
  Microsoft.EntityFrameworkCore.SqlServer
  Microsoft.EntityFrameworkCore


5. We need to ready the connection string on Notepad so that we can paste it on command prompr

	Server=;database=;user name=;password=  (for server authentication)
	Server=86B46DA2A2A958B;database=EmployeeInfoDB_EF;integrated security=true

6. We now need to fire EF command from console Manger to download POCO classes
	tools -> Nuget package manger -> package manager console
	command is
	ScaffoldDB-Context "Server=86B46DA2A2A958B;database=EmployeeInfoDB_EF;integrated security=true;TrustServerCertificate=True
" -Provider Microsoft.EntityFrameworkCore.SqlServer
	-outPutDir -DB
`
7. this will download POCO classes in DB folder (check in solution explorer)
8. Build the project
9. we are now ready to fire LINQ query and display the data
10. in program.cs, we will have to create a new object of Context class
	EmployeeInfoDBContext db = new EmployeeInfoDBContext();//source for LINQ queries
	var emp = from e in db.EmployeeInfo
		  select e; (you can use filter, order by, group by, in between this 2 lines)

	foreach(var item in emp)
	{
		cw(item.empNo);
		cw(item.empName);
		cw(item.empDesignation);
	}
				create database shoppingDB_API
        
        ---Day 24-------------------
use shoppingDB_API

create table products (
    pid int primary key,
    pname varchar(255),
    pprice decimal(10,2),
    pavailableqty int,
    pisinstock bit,
    pdiscountpercentage decimal(5,2),
    poffercode varchar(50),
    poffercodepercentage decimal(5,2)
);
 
insert into products (pid, pname, pprice, pavailableqty, pisinstock, pdiscountpercentage, poffercode, poffercodepercentage) values
(1, 'Nestle Maggi', 0.99, 150, 1, 0, NULL, 0),
(2, 'Heinz Ketchup', 2.99, 100, 1, 5, 'HEINZ5', 5),
(3, 'Coca Cola Soda', 1.49, 200, 1, 10, 'COKE10', 10),
(4, 'Doritos Chips', 3.49, 120, 1, 0, NULL, 0),
(5, 'Tropicana Orange Juice', 4.99, 90, 1, 2.5, 'TROPIC', 2.5),
(6, 'Hershey Chocolate Bar', 1.29, 180, 1, 0, NULL, 0),
(7, 'Lays Potato Chips', 2.99, 130, 1, 15, 'LAYS15', 15),
(8, 'Uncle Ben Rice', 6.49, 60, 1, 0, NULL, 0),
(9, 'Quaker Oats', 5.49, 70, 1, 10, 'OATS10', 10),
(10, 'Oreo Cookies', 3.99, 160, 1, 0, NULL, 0);
 
create table customerdetails (
    cid int primary key,
    cname varchar(255),
    ccity varchar(255),
    cwalletbalance decimal(10,2),
    cemail varchar(255)
);
 
insert into customerdetails values
(1, 'John Doe', 'New York', 150.00, 'johndoe@email.com'),
(2, 'Jane Smith', 'Los Angeles', 225.50, 'janesmith@email.com'),
(3, 'Bob Johnson', 'Chicago', 75.75, 'bobjohnson@email.com');
 
create table orderdetails (
    oid int primary key,
    oproductid int,
    cid int,
    ordertotal decimal(10,2),
    foreign key (oproductid) references products(pid),
    foreign key (cid) references customerdetails(cid)
);
 
insert into orderdetails values
(1, 1, 1, 19.99),
(2, 3, 2, 59.97);









		
	



	
	
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  